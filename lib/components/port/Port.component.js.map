{"version":3,"sources":["../../../src/components/port/Port.component.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;AAEA;;;;AAEA,IAAM,OAAO,gBAAM,WAAN,CAAkB;AAAA;;AAC3B,eAAW;AACP,cAAM,iBAAU,KAAV,CAAgB;AAClB,gBAAI,iBAAU,MAAV,CAAiB,UADH;AAElB,oBAAQ,iBAAU,MAAV,CAAiB,UAFP;AAGlB,sBAAU,iBAAU,MAAV,CAAiB,UAHT;AAIlB,sBAAU,iBAAU,KAAV,CAAgB;AACtB,mBAAG,iBAAU,MAAV,CAAiB,UADE;AAEtB,mBAAG,iBAAU,MAAV,CAAiB;AAFE,aAAhB,CAJQ;AAQlB,kBAAM,iBAAU,MAAV,CAAiB;AARL,SAAhB,CADC;AAWP,iBAAS,iBAAU;AAXZ,KADgB;AAc3B,qBAd2B,+BAcP;AAChB,aAAK,MAAL,GAAc,yBAAO,KAAK,IAAZ,CAAd;AACA,aAAK,MAAL,CAAY,EAAZ,CAAe,OAAf,EAAwB,KAAK,OAA7B;AACH,KAjB0B;AAkB3B,yBAlB2B,iCAkBL,SAlBK,EAkBM;AAC7B,eAAO,UAAU,IAAV,KAAmB,KAAK,KAAL,CAAW,IAArC;AACH,KApB0B;AAqB3B,WArB2B,qBAqBjB;AACN,YAAI,KAAK,KAAL,CAAW,OAAf,EAAwB;AACpB,iBAAK,KAAL,CAAW,OAAX;AACH;AACJ,KAzB0B;AA0B3B,UA1B2B,oBA0BlB;AAAA;;AACL,YAAI,KAAK,KAAL,CAAW,IAAX,CAAgB,QAApB,EAA8B;AAC1B,mBACE;AAAA;AAAA;AACE;AAAA;AAAA,sBAAG,KAAK;AAAA,mCAAM,MAAK,IAAL,GAAY,CAAlB;AAAA,yBAAR;AACE;AACE,mCAAU,WADZ;AAEE,4BAAI,KAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,CAAyB,CAF/B;AAGE,4BAAI,KAAK,KAAL,CAAW,IAAX,CAAgB,QAAhB,CAAyB;AAH/B;AADF;AADF,aADF;AAWH;;AAED,eAAO,IAAP;AACH;AA1C0B,CAAlB,CAAb;kBA4Ce,I","file":"Port.component.js","sourcesContent":["import React, { PropTypes } from 'react';\nimport { select, event } from 'd3-selection';\n\nimport './port.css';\n\nconst Port = React.createClass({\n    propTypes: {\n        port: PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            nodeId: PropTypes.string.isRequired,\n            portType: PropTypes.string.isRequired,\n            position: PropTypes.shape({\n                x: PropTypes.number.isRequired,\n                y: PropTypes.number.isRequired,\n            }),\n            attr: PropTypes.object.isRequired,\n        }),\n        onClick: PropTypes.func,\n    },\n    componentDidMount() {\n        this.d3Node = select(this.node);\n        this.d3Node.on('click', this.onClick);\n    },\n    shouldComponentUpdate(nextProps) {\n        return nextProps.port !== this.props.port;\n    },\n    onClick() {\n        if (this.props.onClick) {\n            this.props.onClick(event);\n        }\n    },\n    render() {\n        if (this.props.port.position) {\n            return (\n              <g>\n                <g ref={c => (this.node = c)}>\n                  <circle\n                    className=\"connector\"\n                    cx={this.props.port.position.x}\n                    cy={this.props.port.position.y}\n                  />\n                </g>\n              </g>\n            );\n        }\n\n        return null;\n    },\n});\nexport default Port;\n"]}