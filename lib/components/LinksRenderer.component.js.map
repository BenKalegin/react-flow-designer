{"version":3,"sources":["../../src/components/LinksRenderer.component.jsx"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA,IAAM,cAAc,gBAAM,WAAN,CAAkB;AAAA;AAClC,cADkC,sBACvB,IADuB,EACjB;AACb,YAAM,eAAe,KAAK,KAAL,CAAW,WAAX,CAAuB,KAAK,QAA5B,EAAsC,SAA3D;AACA,YAAI,CAAC,YAAL,EAAmB;AACf,qCACA,KADA;AAKH;AACD,eACE,8BAAC,YAAD,IAAc,MAAM,IAApB,EAA0B,KAAK,KAAK,EAApC,GADF;AAGH,KAbiC;AAclC,UAdkC,oBAczB;AACL,eACE;AAAA;AAAA;AACG,iBAAK,KAAL,CAAW,KAAX,CAAiB,GAAjB,CAAqB,KAAK,UAA1B;AADH,SADF;AAKH;AApBiC,CAAlB,CAApB;;kBAuBe,W","file":"LinksRenderer.component.js","sourcesContent":["import React from 'react';\nimport invariant from 'invariant';\n\nconst LinksRender = React.createClass({\n    renderLink(link) {\n        const ConcreteLink = this.props.linkTypeMap[link.linkType].component;\n        if (!ConcreteLink) {\n            invariant(\n            false,\n            `<LinksRenderer />  the defined link type in your graph model hasn\\'t been mapped into\n            the dataflow configuration, check LinkType documentation`\n          );\n        }\n        return (\n          <ConcreteLink link={link} key={link.id} />\n        );\n    },\n    render() {\n        return (\n          <g>\n            {this.props.links.map(this.renderLink)}\n          </g>\n    );\n    },\n});\n\nexport default LinksRender;\n"]}