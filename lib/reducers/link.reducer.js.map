{"version":3,"sources":["../../src/reducers/link.reducer.js"],"names":[],"mappings":";;;;;kBAcwB,W;;AAdxB;;AAEA;;AASA;;AACA,IAAM,eAAe,oBAArB;;AAEe,SAAS,WAAT,GAAmD;AAAA,QAA9B,KAA8B,yDAAtB,YAAsB;AAAA,QAAR,MAAQ;;AAC9D,YAAQ,OAAO,IAAf;AACA;AACI,mBAAO,MAAM,GAAN,CAAU,OAAO,MAAjB,EAAyB,8BAAe;AAC3C,oBAAI,OAAO,MADgC;AAE3C,0BAAU,OAAO,QAF0B;AAG3C,0BAAU,OAAO,QAH0B;AAI3C,0BAAU,OAAO,QAJ0B;AAK3C,sBAAM,mBAAQ,OAAO,IAAf;AALqC,aAAf,CAAzB,CAAP;AAOJ;AACI,mBAAO,MAAM,KAAN,CAAY,CAAC,OAAO,MAAR,EAAgB,UAAhB,CAAZ,EAAyC,OAAO,QAAhD,CAAP;AACJ;AACI,mBAAO,MAAM,KAAN,CAAY,CAAC,OAAO,MAAR,EAAgB,UAAhB,CAAZ,EAAyC,OAAO,QAAhD,CAAP;AACJ;AACI,mBAAO,MAAM,MAAN,CAAa,OAAO,MAApB,CAAP;AACJ;AACI,mBAAO,MAAM,OAAN,CAAc,CAAC,OAAO,MAAR,EAAgB,MAAhB,CAAd,EAAuC,mBAAQ,OAAO,IAAf,CAAvC,CAAP;AACJ;AACI,mBAAO,MAAM,MAAN,CAAa,gBAAQ;AACxB,oBAAM,SAAS,OAAO,OAAP,CAAe,MAAf,CAAsB,kBAAU;AAC3C,2BAAO,WAAW,KAAK,EAAvB;AACH,iBAFc,CAAf;AAGA,uBAAO,OAAO,IAAP,KAAgB,CAAvB;AACH,aALM,CAAP;AAMJ;AACI,mBAAO,KAAP;AAzBJ;AA2BH","file":"link.reducer.js","sourcesContent":["import { Map } from 'immutable';\n\nimport {\n    FLOWDESIGNER_LINK_ADD,\n    FLOWDESIGNER_LINK_SET_TARGET,\n    FLOWDESIGNER_LINK_SET_SOURCE,\n    FLOWDESIGNER_LINK_REMOVE,\n    FLOWDESIGNER_LINK_SET_ATTR,\n    FLOWDESIGNER_NODE_REMOVE,\n} from '../constants/flowdesigner.constants';\n\nimport { LinkRecord } from '../constants/flowdesigner.model';\nconst defaultState = new Map();\n\nexport default function linkReducer(state = defaultState, action) {\n    switch (action.type) {\n    case FLOWDESIGNER_LINK_ADD:\n        return state.set(action.linkId, new LinkRecord({\n            id: action.linkId,\n            sourceId: action.sourceId,\n            targetId: action.targetId,\n            linkType: action.linkType,\n            attr: new Map(action.attr),\n        }));\n    case FLOWDESIGNER_LINK_SET_TARGET:\n        return state.setIn([action.linkId, 'targetId'], action.targetId);\n    case FLOWDESIGNER_LINK_SET_SOURCE:\n        return state.setIn([action.linkId, 'sourceId'], action.sourceId);\n    case FLOWDESIGNER_LINK_REMOVE:\n        return state.delete(action.linkId);\n    case FLOWDESIGNER_LINK_SET_ATTR:\n        return state.mergeIn([action.linkId, 'attr'], new Map(action.attr));\n    case FLOWDESIGNER_NODE_REMOVE:\n        return state.filter(link => {\n            const result = action.linksId.filter(linkId => {\n                return linkId === link.id;\n            });\n            return result.size === 0;\n        });\n    default:\n        return state;\n    }\n}\n"]}