{"version":3,"sources":["../../src/reducers/node.reducer.js"],"names":[],"mappings":";;;;;;AAAA;;AAEA;;AAQA;;AAGA,IAAM,eAAe,oBAArB;AACA,IAAM,cAAc,SAAd,WAAc,GAAkC;AAAA,QAAjC,KAAiC,yDAAzB,YAAyB;AAAA,QAAX,MAAW;;AAClD,YAAQ,OAAO,IAAf;AACA;AACI,mBAAO,MAAM,GAAN,CAAU,OAAO,MAAjB,EAAyB,8BAAe;AAC3C,oBAAI,OAAO,MADgC;AAE3C,0BAAU,kCAAmB,OAAO,YAA1B,CAFiC;AAG3C,0BAAU,8BAAe,OAAO,IAAtB,CAHiC;AAI3C,0BAAU,OAAO,QAJ0B;AAK3C,sBAAM,mBAAQ,OAAO,IAAf;AALqC,aAAf,CAAzB,CAAP;AAOJ;AACI,mBAAO,MAAM,KAAN,CACH,CAAC,OAAO,MAAR,EAAgB,UAAhB,CADG,EAEH,kCAAmB,OAAO,YAA1B,CAFG,CAAP;AAIJ;AACI,mBAAO,MAAM,KAAN,CACH,CAAC,OAAO,MAAR,EAAgB,UAAhB,CADG,EAEH,8BAAe,OAAO,QAAtB,CAFG,CAAP;AAIJ;AACI,mBAAO,MAAM,KAAN,CAAY,CAAC,OAAO,MAAR,EAAgB,UAAhB,CAAZ,EAAyC,OAAO,QAAhD,CAAP;AACJ;AACI,mBAAO,MAAM,OAAN,CAAc,CAAC,OAAO,MAAR,EAAgB,MAAhB,CAAd,EAAuC,mBAAQ,OAAO,IAAf,CAAvC,CAAP;AACJ;AACI,mBAAO,MAAM,MAAN,CAAa,OAAO,MAApB,CAAP;AACJ;AACI,mBAAO,KAAP;AA1BJ;AA4BH,CA7BD;;kBA+Be,W","file":"node.reducer.js","sourcesContent":["import { Map } from 'immutable';\n\nimport {\n   FLOWDESIGNER_NODE_ADD,\n   FLOWDESIGNER_NODE_MOVE,\n   FLOWDESIGNER_NODE_UPDATE_TYPE,\n   FLOWDESIGNER_NODE_SET_ATTR,\n   FLOWDESIGNER_NODE_SET_SIZE,\n   FLOWDESIGNER_NODE_REMOVE,\n} from '../constants/flowdesigner.constants';\nimport {\n    NodeRecord, PositionRecord, SizeRecord,\n} from '../constants/flowdesigner.model';\nconst defaultState = new Map();\nconst nodeReducer = (state = defaultState, action) => {\n    switch (action.type) {\n    case FLOWDESIGNER_NODE_ADD:\n        return state.set(action.nodeId, new NodeRecord({\n            id: action.nodeId,\n            position: new PositionRecord(action.nodePosition),\n            nodeSize: new SizeRecord(action.size),\n            nodeType: action.nodeType,\n            attr: new Map(action.attr),\n        }));\n    case FLOWDESIGNER_NODE_MOVE:\n        return state.setIn(\n            [action.nodeId, 'position'],\n            new PositionRecord(action.nodePosition)\n        );\n    case FLOWDESIGNER_NODE_SET_SIZE:\n        return state.setIn(\n            [action.nodeId, 'nodeSize'],\n            new SizeRecord(action.nodeSize)\n        );\n    case FLOWDESIGNER_NODE_UPDATE_TYPE:\n        return state.setIn([action.nodeId, 'nodeType'], action.nodeType);\n    case FLOWDESIGNER_NODE_SET_ATTR:\n        return state.mergeIn([action.nodeId, 'attr'], new Map(action.attr));\n    case FLOWDESIGNER_NODE_REMOVE:\n        return state.delete(action.nodeId);\n    default:\n        return state;\n    }\n};\n\nexport default nodeReducer;\n"]}